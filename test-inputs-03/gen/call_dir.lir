struct st {
  f:int
  g:int
}

a:int
b:&int
c:&&st
f:&(int, &int, &st) -> &int

fn f(x:int, y:&int, z:&st) -> &int {
let _t1:&int, _t2:int, _t3:&int, p:&int
entry:
  _t1 = $gfp z f
  _t2 = $load _t1
  x = $copy _t2
  _t3 = $addrof x
  y = $gep _t3 10
  $ret y
}

fn main() -> int {
let _t1:&st, _t2:&int, _t3:int
bb1:
  _t3 = $load _t2
  $ret _t3

entry:
  c = $alloc 10 [_alloc1]
  _t1 = $load c
  _t2 = $call_dir f(a, b, _t1) then bb1
}

