struct list {
  next:&list
  value:int
}

fn main() -> int {
let _t1:int, _t10:&int, _t11:int, _t12:int, _t13:&&list, _t14:&list, _t2:&&list, _t3:&list, _t4:&int, _t5:&&list, _t6:&list, _t7:int, _t8:int, _t9:int, i:int, m:&list, n:&list
bb1:
  _t1 = $cmp gt i 0
  $branch _t1 bb2 bb3

bb2:
  _t2 = $gfp n next
  _t3 = $alloc 1 [_alloc2]
  $store _t2 _t3
  _t4 = $gfp n value
  $store _t4 i
  _t5 = $gfp n next
  _t6 = $load _t5
  n = $copy _t6
  _t7 = $arith sub i 1
  i = $copy _t7
  $jump bb1

bb3:
  $jump bb4

bb4:
  _t8 = $cmp neq m 0
  $branch _t8 bb5 bb6

bb5:
  _t9 = $arith mul 10 i
  _t10 = $gfp m value
  _t11 = $load _t10
  _t12 = $arith add _t9 _t11
  i = $copy _t12
  _t13 = $gfp m next
  _t14 = $load _t13
  m = $copy _t14
  $jump bb4

bb6:
  $ret i

entry:
  i = $copy 3
  n = $alloc 1 [_alloc1]
  m = $copy n
  $jump bb1
}

